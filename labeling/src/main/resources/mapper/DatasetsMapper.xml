<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlabeling.labeling.mapper.DatasetsMapper">


    <insert id="addDatasets">
        INSERT INTO `datasets`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="true">`name`,</if>
            <if test="description != null or description != ''"> `description`,</if>
            <if test="true">`type`,</if>
            <if test="true">`data_root_dir`,</if>
            <if test="true">`creator`,</if>
            <if test="visible != null or visible != ' '">`visible`,</if>
            <if test="true">`create_time`,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="true">#{name},</if>
            <if test="description != null or description != ''"> #{description},</if>
            <if test="true">#{type},</if>
            <if test="true">#{dataRootDir},</if>
            <if test="true">#{creator},</if>
            <if test="visible != null or visible != ''">#{visible},</if>
            <choose>
                <when test="createTime != null">#{createTime},</when>
                <otherwise>CURRENT_TIMESTAMP,</otherwise>
            </choose>

        </trim>
    </insert>

    <select id="getAllDataset" resultType="com.dlabeling.labeling.domain.po.Datasets">
        SELECT
            `id`,
            `name`,
            `description`,
            `type`,
            `data_root_dir`,
            `visible`,
            `creator`,
            `create_time`,
            `update_time`,
            `destroy_time`
        FROM `datasets`
    </select>

    <update id="updateDatasetsByID">
        UPDATE `datasets`
        <set>
            <trim suffixOverrides=",">
                <if test="name != null and name != ''">`name` = #{name},</if>
                <if test="description != null and description != ''"> `description` = #{description},</if>
                <if test="dataRootDir != null and dataRootDir != ''">`data_root_dir` = #{dataRootDir},</if>
                <if test="visible != null">`visible` = #{visible},</if>
                <if test="updateTime != null"> `update_time` = #{updateTime},</if>
                <if test="destroyTime != null"> `destroy_time` = #{destroyTime},</if>
            </trim>
        </set>
        <where>
            `id` = #{id}
        </where>
    </update>

    <delete id="deleteDatasetsByID">
        DELETE FROM `datasets` WHERE `id` = #{id}
    </delete>

    <select id="selectByObj" resultType="com.dlabeling.labeling.domain.po.Datasets">
        SELECT
            `id`,
            `name`,
            `description`,
            `type`,
            `data_root_dir`,
            `visible`,
            `create_time`,
            `update_time`,
            `destroy_time`
        FROM `datasets`
        <where>
            <trim suffixOverrides="AND">
                <if test="true"> `name` = #{name} AND</if>
                <if test="description != null"> `description` = #{description} AND </if>
                <if test="type != null"> `type` = #{type} AND</if>
                <if test="dataRootDir != null"> `data_root_dir` = #{dataRootDir} AND</if>
                <if test="visible != null"> `visible` = #{visible} AND</if>
            </trim>
        </where>
    </select>

    <select id="selectByID" resultType="com.dlabeling.labeling.domain.po.Datasets">
        SELECT * FROM `datasets`
        WHERE `id` = #{id}
    </select>

    <select id="selectDatasetLike" resultType="com.dlabeling.labeling.domain.po.Datasets">
        SELECT
            `id`,
            `name`,
            `description`,
            `type`,
            `data_root_dir`,
            `visible`,
            `create_time`,
            `update_time`,
            `destroy_time`
        FROM `datasets`
        <where>
            <trim suffixOverrides="AND">
                <if test="datasets.name!=null and datasets.name !=''">
                    `name` LIKE CONCAT('%', #{datasets.name}, '%') AND
                </if>
                <if test="datasets.description != null and datasets.description !=''">
                    `description` LIKE CONCAT('%', #{datasets.description}, '%') AND
                </if>
                <if test="creatorList != null and creatorList.size() > 0">
                    `creator` IN
                    <foreach item="item" index="index" collection="creatorList" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                     AND
                </if>
            </trim>
        </where>
    </select>
    <select id="selectDatasetByJoinBatch" resultType="com.dlabeling.labeling.domain.vo.DatasetsVO">
        SELECT
            datasets.id as id,
            datasets.name as name,
            datasets.description as description,
            datasets.type as type,
            user.username as creator,
            datasets.data_root_dir as dataRootDir,
            datasets.visible as visible,
            JSON_ARRAYAGG(JSON_OBJECT(
                          "id", label_conf.id,
                          "datasetId", label_conf.dataset_id,
                          "labelName", label_conf.label_name,
                          "labelType", label_conf.label_type
                          )) as labelConfList
        FROM datasets
        JOIN user on datasets.creator = user.id
        JOIN label_conf on datasets.id = label_conf.dataset_id
        <where>
            datasets.id IN
            <foreach item="item" index="index" collection="datasetsList" open="(" separator="," close=")">
                #{item.id}
            </foreach>

        </where>
        GROUP BY datasets.id
    </select>
    <select id="selectDatasetByJoinBatchWithFilter" resultType="com.dlabeling.labeling.domain.vo.DatasetsVO">
        SELECT
        datasets.id as id,
        datasets.name as name,
        datasets.description as description,
        datasets.type as type,
        user.username as creator,
        datasets.data_root_dir as dataRootDir,
        datasets.visible as visible,
        JSON_ARRAYAGG(JSON_OBJECT(
        "id", label_conf.id,
        "datasetId", label_conf.dataset_id,
        "labelName", label_conf.label_name,
        "labelType", label_conf.label_type
        )) as labelConfListJson
        FROM datasets
        JOIN user on datasets.creator = user.id
        JOIN label_conf on datasets.id = label_conf.dataset_id
        <where>
            <trim suffixOverrides="AND">
                <if test="datasetsFilter.name!=null and datasetsFilter.name !=''">
                    datasets.`name` LIKE CONCAT('%', #{datasetsFilter.name}, '%') AND
                </if>
                <if test="datasetsFilter.description != null and datasetsFilter.description !=''">
                    datasets.`description` LIKE CONCAT('%', #{datasetsFilter.description}, '%') AND
                </if>
                <if test="datasetsFilter.creator !=null and datasetsFilter != ''">
                    user.username LIKE CONCAT('%', #{datasetsFilter.creator}, '%') AND
                </if>
            </trim>
        </where>
        GROUP BY datasets.id
    </select>
    <select id="fetchCreatorList" resultType="java.lang.String">
        SELECT DISTINCT user.username FROM user JOIN datasets on user.id=datasets.creator

    </select>


</mapper>